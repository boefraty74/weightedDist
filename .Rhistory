source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
debugSource('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
actTimes
actTimes[990:1000]
fFromTo
actTimes[577]
actTimes[3360]
allTimes[3360]
forecastLength
debugSource('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
fFromTo
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
sum(prediction$mean)
sum(dataset[fFromTo[1]:N,2])
myCumSum = sum(prediction$mean) + sum(dataset[fFromTo[1]:N,2])
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
myCumSum
format(myCumSum, digits=2, nsmall=2)
format(myCumSum, digits=2, nsmall=3)
format(myCumSum, digits=3, nsmall=3)
format(myCumSum, digits=3, nsmall=2)
format(myCumSum, digits=4, nsmall=2)
format(myCumSum, digits=4, nsmall=4)
format(myCumSum, digits=10, nsmall=10)
format(myCumSum, digits=5, nsmall=10)
format(myCumSum, digits=3, nsmall=10)
format(myCumSum, digits=4, nsmall=10)
format(myCumSum, digits=2, nsmall=2)
format(111111, digits=2, nsmall=2)
format(111111.565657, digits=2, nsmall=2)
format(1121211111.565657, digits=2, nsmall=2)
format(1121211111.565657, digits=3, nsmall=2)
format(1121211111.565657, digits=2, nsmall=2)
format(1121211111.565657, digits=2, nsmall=3)
format(1121211111.565657, digits=2, nsmall=4)
format(1121211111.565657, digits=2, nsmall=5)
format(1121211111.565657, digits=2, nsmall=10)
format(1121211111.565657, digits=2, nsmall=100)
format(1121211111.565657, digits=2, nsmall=3)
format(1121211111.565657, digits=4, nsmall=2)
format(1121211111.565657, digits=5, nsmall=2)
format(1121211111.565657, digits=3, nsmall=2)
format(1121111.56, digits=3, nsmall=2)
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
fit$parameters$vect
fit$parameters$control
plot.forecast(prediction)
prediction$method
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
fit$AIC
fit$errors
length(fit$errors)
length(dataset)
nrow(dataset)
?tbats
?auto.arima
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
?tbats
any(c(T,T,F))
any(c(T,F,F))
any(c(F,F,F))
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
freq1 = 96
freq2 = 672
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
debugSource('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
confInterval1
confInterval2
exists("settings_graph_params_showFromTo")
settings_graph_params_showFromTo
debugSource('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
lowerConfInterval
upperConfInterval
algModeFast
?tbats
?auto.arima
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
fit$likelihood
fit$AIC
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/projects/PBI/R/custom_R_visuals/PowerBI-visuals-forcasting-TBATS/script.r')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_5bae7409-92a9-48f7-a3af-138b90f81352/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_5bae7409-92a9-48f7-a3af-138b90f81352/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_5bae7409-92a9-48f7-a3af-138b90f81352/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_5bae7409-92a9-48f7-a3af-138b90f81352/REditorWrapper.R')
source('C:/Users/boefraty/projects/PBI/R/Interactive/TutorialFunnelPlot/funnelRvisual/script.r')
source('C:/Users/boefraty/projects/PBI/R/Interactive/TutorialFunnelPlot/funnelRvisual/script.r')
source('C:/Users/boefraty/projects/PBI/R/Interactive/TutorialFunnelPlot/funnelRvisual/script_old.r')
source('C:/Users/boefraty/projects/PBI/R/Interactive/TutorialFunnelPlot/funnelRvisual/script_old.r')
source('C:/Users/boefraty/projects/PBI/R/Interactive/TutorialFunnelPlot/funnelRvisual/script.r')
install.packages("stringr")
sessionInfo()
debugSource('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_31dd2b14-d4b4-4477-81ef-149f2c706f67/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_088bbc35-2dfc-4d96-b91e-b19ca738fd98/REditorWrapper.R')
install.packages("ggrepel")
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_088bbc35-2dfc-4d96-b91e-b19ca738fd98/REditorWrapper.R')
install.packages("ggthemes")
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_088bbc35-2dfc-4d96-b91e-b19ca738fd98/REditorWrapper.R')
sessionInfo()
install.packages("igraph")
install.packages("wordcloud")
si = sessionInfo(); "XML" %in% names(si$otherPkgs)
si$otherPkgs
names(si$otherPkgs)
union(names(si$otherPkgs), names(si$basePkgs))
names(si$basePkgs)
names(si$loadedOnly)
union(names(si$otherPkgs), names(si$basePkgs),si$loadedOnly)
union(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
union(c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
)
c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
library(XML)
c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
si = sessionInfo()
c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
si = sessionInfo()
namesPackages =  c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
checkPackages = c("XML","plotly","ggplot2","htmlwidgets","scales")
checkPackages = c("XML","plotly","ggplot2","htmlwidgets","scales")
flagAllPackages = prod(checkPackages %in% namesPackages)
flagAllPackages
checkPackages %in% namesPackages
detach("XML")
detach(XML)
library(XML)
library("XML", lib.loc="~/R/win-library/3.2")
detach("package:XML", unload=TRUE)
si = sessionInfo()
si = sessionInfo()
namesPackages =  c(names(si$otherPkgs), names(si$basePkgs),names(si$loadedOnly))
checkPackages = c("XML","plotly","ggplot2","htmlwidgets","scales")
checkPackages = c("XML","plotly","ggplot2","htmlwidgets","scales")
flagAllPackages = prod(checkPackages %in% namesPackages)
flagAllPackages
checkPackages %in% namesPackages
warning("ssss")
install.packages("scales")
installed.packages("corrplot")
installed.packages("rattle")
install.packages("rattle")
install.packages("corrplot")
install.packages("car")
install.packages("scatterplot3d")
install.packages("gridExtra")
install.packages("networkD3")
install.packages("jk")
install.packages("plotly")
install.packages("shiny")
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_1b038fd1-aa6c-4842-a6b7-3e3d19ab98d2/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_1b038fd1-aa6c-4842-a6b7-3e3d19ab98d2/REditorWrapper.R')
Orders_Basket_Table <- inspect(sort(arAll, by = "confidence"),
ruleSep = "", setStart = "",
setEnd = "")
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_1b038fd1-aa6c-4842-a6b7-3e3d19ab98d2/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_1b038fd1-aa6c-4842-a6b7-3e3d19ab98d2/REditorWrapper.R')
source('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_7af247b5-51f3-48ae-b34b-f746b51a6f3b/REditorWrapper.R')
debugSource('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_7af247b5-51f3-48ae-b34b-f746b51a6f3b/REditorWrapper.R')
dataset = dataset[1:10000,:]
dataset = dataset[1:10000,]
debugSource('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_7af247b5-51f3-48ae-b34b-f746b51a6f3b/REditorWrapper.R')
debugSource('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_7af247b5-51f3-48ae-b34b-f746b51a6f3b/REditorWrapper.R')
debugSource('C:/Users/boefraty/AppData/Local/Radio/REditorWrapper_7af247b5-51f3-48ae-b34b-f746b51a6f3b/REditorWrapper.R')
sessionInfo()
sessionInfo()
install.packages("AzureML")
install.packages("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
install.packages("dplyr")
library(dplyr)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
install.packages("httpuv")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(plotly)
library(rjson)
install.packages("rjson")
library(plotly)
library(rjson)
json_file <- "https://raw.githubusercontent.com/plotly/plotly.js/master/test/image/mocks/sankey_energy_dark.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = json_data$data[[1]]$link$source,
target = json_data$data[[1]]$link$target,
value =  json_data$data[[1]]$link$value,
label =  json_data$data[[1]]$link$label
)
) %>%
layout(
title = "Energy forecast for 2050<br>Source: Department of Energy & Climate Change, Tom Counsell via <a href='https://bost.ocks.org/mike/sankey/'>Mike Bostock</a>",
font = list(
size = 10,
color = 'white'
),
xaxis = list(showgrid = F, zeroline = F, showticklabels = F),
yaxis = list(showgrid = F, zeroline = F, showticklabels = F),
plot_bgcolor = 'black',
paper_bgcolor = 'black'
)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="sankey/dark")
chart_link
p
library(readPNG)
install.packages("readPNG")
install.packages("readPNG")
library(readPNG)
library(png)
install.packages("png")
library(png)
library(png1)
install.packages("janitor")
7*0.8
7*1.2
[247,253]
c(247,253)/60
0.116*60
0.217*60
install.packages("GGally")
1000*10/60/60
10000*10/60/60
10000*10/60/60
1000*10/60/60
1100*10/60/60
install.packages("Rgraphviz")
install.packages("tm")
2
install.packages("outlier")
install.packages("outliers")
set.seed(1234)
y=rnorm(100)
outlier(y)
library(outlier) # upload package
set.seed(1234);y=rnorm(100) # random data
outlier(y)
library(outlier)
library(outliers) # upload package
set.seed(1234);y=rnorm(100) # random data
outlier(y)
?outlier
set.seed(1234)
x = rnorm(10)
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
scores(x, type="t")  # t scores
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
scores(x, type="chisq", prob=0.95)  # beyond 95th %ile
scores(x, type="z", prob=0.95)  # beyond 95th %ile based on z-scores
set.seed(1234); x = rnorm(10) # random data
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
#example
set.seed(1234); x = rnorm(10) # random data
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
#> [1] 0.68458034 0.44007451 2.17210689 3.88421971 0.66539631  . . .
scores(x, type="t")  # t scores
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
#> [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
scores(x, type="chisq", prob=0.95)  # beyond 95th %ile
scores(x, type="z", prob=0.95)  # beyond 95th %ile based on z-scores
scores(x, type="t", prob=0.95)  # beyond 95th %ile based on t-scores
x(5)
x[5]
#example
set.seed(1234); x = rnorm(10) # random data
x[5] = 10; #outlier
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq")  # chi-sq scores => (x - mean(x))^2/var(x)
#> [1] 0.68458034 0.44007451 2.17210689 3.88421971 0.66539631  . . .
scores(x, type="t")  # t scores
scores(x, type="chisq", prob=0.9)  # beyond 90th %ile based on chi-sq
#> [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE
scores(x, type="chisq", prob=0.95)  # beyond 95th %ile
scores(x, type="z", prob=0.95)  # beyond 95th %ile based on z-scores
scores(x, type="t", prob=0.95)  # beyond 95th %ile based on t-scores
set.seed(1234); x = rnorm(10) # random data
x[5] = 10; #outlier
scores(x)  # z-scores => (x-mean)/sd
set.seed(1234); x = rnorm(10) # random data
x[5] = 42; #outlier
scores(x)  # z-scores => (x-mean)/sd
#example
set.seed(1234); x = rnorm(10) # random data
x[5] = 42; #outlier
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq", prob=0.999)  # beyond 95th %ile
scores(x, type="z", prob=0.999)  # beyond 95th %ile based on z-scores
scores(x, type="t", prob=0.999)  # beyond 95th %ile based on t-scores
#example
set.seed(1234); x = rnorm(10) # random data
x[5] = 42; #outlier
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq", prob=0.999)  # beyond 99.9th %ile
scores(x, type="z", prob=0.999)  # beyond 99.9th %ile based on z-scores
scores(x, type="t", prob=0.999)  # beyond 99.9th %ile based on t-scores
#example
set.seed(1234); x = rnorm(10) # random data
x[5] = 42; #outlier
scores(x)  # z-scores => (x-mean)/sd
scores(x, type="chisq", prob=0.99)  # beyond 99th %ile
scores(x, type="z", prob=0.99)  # beyond 99th %ile based on z-scores
scores(x, type="t", prob=0.99)  # beyond 99th %ile based on t-scores
debugSource('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
iconv('row', "latin1", "ASCII", sub="")
iconv('row aa dd', "latin1", "ASCII", sub="")
iconv('row aa dd 1', "latin1", "ASCII", sub="")
?iconv
dataset$Text1 <- sapply(dataset$Text,function(row) iconv(row, "latin1", "ASCII", sub=""))
View(dataset)
View(dataset)
source('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
source('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
source('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
source('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
source('C:/Users/boefraty/REditorWrapper_92272126-3338-4f30-9453-a0fc1381ad81/REditorWrapper.R')
View(dataset)
View(dataset)
(dataset$Text == dataset$Text1)
class(dataset$Text)
class(dataset$Text1)
?iconv
dataset$Text <- sapply(dataset$Text,function(row) iconv(row, "", "", sub=""))
corpus = Corpus(VectorSource(dataset))
cleanCorpus = clean_corpus(corpus)
blues <- brewer.pal(9, "Blues")
blues = blues [-(1:3)]
wordcloud(cleanCorpus, max.words = 50, colors = blues, scale=c(5,0.5), rot.per=0.35, use.r.layout=FALSE)
require("NLP")
require("tm")
require("RColorBrewer")
require("wordcloud")
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
clean_corpus <- function(corpus){
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, stripWhitespace)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removeWords, c(stopwords("english"), "taco"))
return(corpus)
}
#dataset$Text1 <- sapply(dataset$Text,function(row) iconv(row, "latin1", "ASCII", sub=""))
dataset$Text <- sapply(dataset$Text,function(row) iconv(row, "", "", sub=""))
corpus = Corpus(VectorSource(dataset))
cleanCorpus = clean_corpus(corpus)
blues <- brewer.pal(9, "Blues")
blues = blues [-(1:3)]
wordcloud(cleanCorpus, max.words = 50, colors = blues, scale=c(5,0.5), rot.per=0.35, use.r.layout=FALSE)
install.packages("forecast")
install.packages("SparkR")
'c:\Program Files\spark-2.2.0-bin-hadoop2.7\'
Sys.setenv(SPARK_HOME = "c:/Program Files/spark-2.2.0-bin-hadoop2.7/")
library(SparkR, lib.loc = c(file.path(Sys.getenv("SPARK_HOME"), "R", "lib")))
sparkR.session(master = "local[*]", sparkConfig = list(spark.driver.memory = "2g"))
2
sparkR.session()
rdf = data.frame(a =1, b = 10)
DF = createDataFrame(rdf)
0.25^3
0.25^4*30000
30000*0.25
30000*0.25^2
30000*0.25^3
30000*0.25^4
30000*0.25^5
install.packages("SnowballC")
iris
D = iris
View(D)
D = iris3
D = iris
dataset = data.frame(ID = c(1,2,3,4,5,6),X = c(1,1,1,3,3,3))
fit <- lm(X ~ ID, data = dataset)
fitted(fit)
fit
dataset$X1 = fitted(fit)
dataset
debugSource('C:/Users/boefraty/projects/PBI/R/AML/tit1.R')
debugSource('C:/Users/boefraty/projects/PBI/R/AML/tit1.R')
storage_account_name
storage_account_key
"DefaultEndpointsProtocol=https;AccountName=" + storage_account_name + ";AccountKey=" + storage_account_key
debugSource('C:/Users/boefraty/projects/PBI/R/AML/tit1.R')
connection_string
result
?azureGetBlob
??azureGetBlob
install.packages("AzureSMR")
library("AzureSMR")
A = read.csv(url("https://storageboefraty.blob.core.windows.net/mycontainerpublic/output1results.csv"))
View(A)
source('C:/Users/boefraty/projects/PBI/R/AML/tit1.R')
A = read.csv(url("https://storageboefraty.blob.core.windows.net/mycontainerpublic/output1results.csv"))
library("RODBC")
install.packages("RODBC")
source('C:/Users/boefraty/projects/PBI/R/AML/BatchRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
print(fromJSON(result))
A = fromJSON(result)
A$Results$output1
A$Results$output1$type
A$Results$output1$value
A$Results$output1$value[[1]]
A$Results$output1$value[[2]]
A$Results$output1$value[[3]]
A$Results$output1$value[[3]][[1]]
A$Results$output1$value[[3]][[2]]
A$Results$output1$value[[3]]
A$Results$output1$value[[2]]
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/OneRequest.R')
source('C:/Users/boefraty/projects/PBI/R/AML/BatchRequest.R')
View(OutputTitanic)
debugSource('C:/Users/boefraty/projects/PBI/R/AML/BatchRequest.R')
blobUrl
fc
ls
dir()
getwd()
libraryRequireInstall = function(packageName, ...)
{
if(!require(packageName, character.only = TRUE))
warning(paste("*** The package: '", packageName, "' was not installed ***",sep=""))
}
#Remark: most of the packages are required because of several automatic cluster number algorithms
libraryRequireInstall("nloptr")
libraryRequireInstall("seriation")
libraryRequireInstall("NbClust")
libraryRequireInstall("cluster")
libraryRequireInstall("car")
libraryRequireInstall("scales")
libraryRequireInstall("fpc")
libraryRequireInstall("mclust")
libraryRequireInstall("apcluster")
libraryRequireInstall("vegan")
libraryRequireInstall("Redmonder")
?kmeans
library(mclust)
install.packages("clust")
install.packages("mclust")
?Mclust
library(mclust)
?Mclust
?kmeans
source('C:/Users/boefraty/projects/PBI/Telemetry_AI/weightedDistanceSort/script.r')
setwd('C:/Users/boefraty/projects/PBI/Telemetry_AI/weightedDistanceSort')
source('C:/Users/boefraty/projects/PBI/Telemetry_AI/weightedDistanceSort/script.r')
debugSource('C:/Users/boefraty/projects/PBI/Telemetry_AI/weightedDistanceSort/script.r')
debugSource('C:/Users/boefraty/projects/PBI/Telemetry_AI/weightedDistanceSort/script.r')
View(Tooltips)
View(Values)
install.packages("highcharter")
